{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/DJKvanT/Downloads/React_Native/Kvant_Projects/Mobile_Application/src/AddTodo.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport var AddTodo = function AddTodo(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var pressHandler = function pressHandler() {\n    if (value.trim()) {\n      onSubmit(value);\n      setValue('');\n    } else {\n      Alert.alert('Введенное значение не может быть пустым');\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.block,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setValue,\n    value: value,\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0422\\u0435\\u043A\\u0441\\u0442\",\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n    onPress: pressHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  block: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  input: {\n    width: '70%',\n    padding: 10,\n    borderStyle: 'solid',\n    borderBottomWidth: 2,\n    borderBottomColor: '#3949ab'\n  }\n});","map":{"version":3,"sources":["/Users/DJKvanT/Downloads/React_Native/Kvant_Projects/Mobile_Application/src/AddTodo.js"],"names":["React","useState","AddTodo","onSubmit","value","setValue","pressHandler","trim","Alert","alert","styles","block","input","StyleSheet","create","flexDirection","justifyContent","alignItems","marginBottom","width","padding","borderStyle","borderBottomWidth","borderBottomColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAIA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACXF,QAAQ,CAAC,EAAD,CADG;AAAA;AAAA,MAC9BG,KAD8B;AAAA,MACvBC,QADuB;;AAGrC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIF,KAAK,CAACG,IAAN,EAAJ,EAAkB;AAChBJ,MAAAA,QAAQ,CAACC,KAAD,CAAR;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHC,MAGK;AACLG,MAAAA,KAAK,CAACC,KAAN,CAAY,yCAAZ;AACD;AAEJ,GARG;;AAWA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACA,IAAA,KAAK,EAAED,MAAM,CAACE,KADd;AAEA,IAAA,YAAY,EAAEP,QAFd;AAGA,IAAA,KAAK,EAAED,KAHP;AAIA,IAAA,WAAW,EAAC,2EAJZ;AAKA,IAAA,WAAW,EAAE,KALb;AAMA,IAAA,cAAc,EAAC,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,kDAAd;AAAyB,IAAA,OAAO,EAAEE,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAcH,CA5BM;AA8BP,IAAMI,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,KAAK,EAAE;AACHI,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,cAAc,EAAE,eAFb;AAGHC,IAAAA,UAAU,EAAE,QAHT;AAIHC,IAAAA,YAAY,EAAE;AAJX,GADsB;AAO7BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,OAAO,EAAE,EAFJ;AAGLC,IAAAA,WAAW,EAAE,OAHR;AAILC,IAAAA,iBAAiB,EAAE,CAJd;AAKLC,IAAAA,iBAAiB,EAAE;AALd;AAPsB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Button, StyleSheet, Alert } from 'react-native';\n\n\nexport const AddTodo = ({ onSubmit }) => {\n    const [value, setValue] = useState('')\n\n    const pressHandler = () => {\n      if (value.trim()) {\n        onSubmit(value)\n        setValue('')\n    } else {\n      Alert.alert('Введенное значение не может быть пустым')\n    }\n\n} \n\n\n    return (\n        <View style={styles.block}>\n            <TextInput \n            style={styles.input} \n            onChangeText={setValue}\n            value={value}\n            placeholder='Введите Текст'\n            autoCorrect={false}\n            autoCapitalize='none'\n            \n            />\n            <Button title='Добавить' onPress={pressHandler} />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    block: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: 15,\n    },\n    input: {\n      width: '70%',\n      padding: 10,\n      borderStyle: 'solid',\n      borderBottomWidth: 2,\n      borderBottomColor: '#3949ab'\n\n    }\n})"]},"metadata":{},"sourceType":"module"}